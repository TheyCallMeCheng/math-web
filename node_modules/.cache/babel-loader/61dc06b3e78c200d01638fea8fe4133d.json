{"ast":null,"code":"var _jsxFileName = \"/Users/marianionutcioancaradu/Documents/mathBlocks_web/mathblocks-web/src/components/Gallery.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport abiDecoder from 'abi-decoder';\nimport ReactDOM from 'react-dom';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IPFS = require('ipfs-http-client'); //Contract declaration and init\n\n\nconst contract_abi = require('./abi.json'); //To change during deployment\n\n\nconst web3 = new Web3(\"https://rinkeby.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\"); //To change during deployment\n\nconst contractAddr = \"0x1130753c69717efa1aa8450005e026788810bcd6\"; //To change during deployment\n\nfunction Gallery() {\n  _s();\n\n  const baseUrl = 'https://ipfs.io/ipfs';\n  useEffect(() => {\n    load();\n  });\n  abiDecoder.addABI(contract_abi);\n  var contract = new web3.eth.Contract(contract_abi, web3.utils.toChecksumAddress(contractAddr));\n  var ImageCounter = 0;\n\n  function renderImage(obj) {\n    ImageCounter++;\n\n    const images = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: 'galleryId' + ImageCounter,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: obj.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: obj.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n\n    ReactDOM.render(images, document.getElementById('imgage-container').appendChild());\n  }\n\n  async function getObject(string) {\n    let metadataObj;\n    let res = await fetch(baseUrl + string.substring(6)).then(response => response.json()).then(data => metadataObj = data);\n    return metadataObj;\n  }\n\n  async function load() {\n    const node = await IPFS.create();\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n    console.log(accounts[0]);\n    let walletNfts = await contract.methods.walletOfOwner(accounts[0]).call();\n    console.log(walletNfts);\n    var uri;\n\n    for await (let variable of walletNfts) {\n      console.log(variable);\n      uri = await contract.methods.tokenURI(variable).call();\n      let obj = await getObject(uri);\n      console.log(\"Image url \" + obj.image);\n      renderImage(obj);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"Gallery\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"img-container\",\n        id: \"image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"galleryId1\",\n          class: \"galleryViewr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Gallery, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/marianionutcioancaradu/Documents/mathBlocks_web/mathblocks-web/src/components/Gallery.js"],"names":["React","useState","useEffect","abiDecoder","ReactDOM","Web3","IPFS","require","contract_abi","web3","contractAddr","Gallery","baseUrl","load","addABI","contract","eth","Contract","utils","toChecksumAddress","ImageCounter","renderImage","obj","images","name","image","render","document","getElementById","appendChild","getObject","string","metadataObj","res","fetch","substring","then","response","json","data","node","create","accounts","window","ethereum","request","method","console","log","walletNfts","methods","walletOfOwner","call","uri","variable","tokenURI"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport abiDecoder from 'abi-decoder'\nimport ReactDOM from 'react-dom'\nimport Web3 from 'web3'\nconst IPFS = require('ipfs-http-client');\n\n//Contract declaration and init\nconst contract_abi = require('./abi.json'); //To change during deployment\nconst web3 = new Web3(\"https://rinkeby.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\"); //To change during deployment\nconst contractAddr = \"0x1130753c69717efa1aa8450005e026788810bcd6\"; //To change during deployment\n\nfunction Gallery(){\n    const baseUrl = 'https://ipfs.io/ipfs';\n\n    useEffect(() => {\n        load();\n    });\n    \n\n    abiDecoder.addABI(contract_abi);\n    var contract = new web3.eth.Contract(\n        contract_abi,       \n        web3.utils.toChecksumAddress(contractAddr)\n    );\n\n    var ImageCounter = 0;\n    function renderImage(obj) {\n        ImageCounter++;\n        const images = ( \n            <div id={'galleryId' + ImageCounter} >\n                <h1>{obj.name}</h1>\n                <img src={obj.image} />\n            </div>\n        );\n        ReactDOM.render(\n            images,\n            document.getElementById('imgage-container').appendChild()\n        );\n    }\n\n    async function getObject(string) {\n        let metadataObj;\n        let res = await fetch(baseUrl + string.substring(6))\n                    .then(response => response.json())\n                    .then(data => metadataObj = data)\n        \n        return metadataObj;\n    }\n\n\n    async function load() {\n        const node = await IPFS.create();\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        console.log(accounts[0])\n        let walletNfts = await contract.methods.walletOfOwner(accounts[0]).call();\n        console.log(walletNfts);\n\n        var uri;\n        for await (let variable of walletNfts) {\n            console.log(variable);\n            uri = await contract.methods.tokenURI(variable).call();\n            let obj = await getObject(uri);\n            console.log(\"Image url \" + obj.image);\n            renderImage(obj);\n        }\n          \n\n\n    }\n    return(\n        <div class=\"Gallery\" >\n            <h1>Gallery</h1>\n            <div>\n                <div class=\"img-container\" id=\"image-container\">\n                    <div id=\"galleryId1\" class=\"galleryViewr\">\n\n                    </div>\n                    \n                </div>\n            </div>\n        </div>\n    );\n}\nexport default Gallery;"]},"metadata":{},"sourceType":"module"}