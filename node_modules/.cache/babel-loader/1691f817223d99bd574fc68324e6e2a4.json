{"ast":null,"code":"'use strict';\n\nconst {\n  CID\n} = require('multiformats/cid');\n/**\n * @param {string|Uint8Array|CID} cid\n */\n\n\nexports.cleanCid = cid => {\n  if (cid instanceof Uint8Array) {\n    return CID.decode(cid);\n  }\n\n  return CID.parse(cid.toString());\n};","map":{"version":3,"sources":["/Users/marianionutcioancaradu/Documents/mathBlocks_web/mathblocks-web/node_modules/ipfs-core/src/components/block/utils.js"],"names":["CID","require","exports","cleanCid","cid","Uint8Array","decode","parse","toString"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAUC,OAAO,CAAC,kBAAD,CAAvB;AAEA;AACA;AACA;;;AACAC,OAAO,CAACC,QAAR,GAAmBC,GAAG,IAAI;AACxB,MAAIA,GAAG,YAAYC,UAAnB,EAA+B;AAC7B,WAAOL,GAAG,CAACM,MAAJ,CAAWF,GAAX,CAAP;AACD;;AAED,SAAOJ,GAAG,CAACO,KAAJ,CAAUH,GAAG,CAACI,QAAJ,EAAV,CAAP;AACD,CAND","sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\n\n/**\n * @param {string|Uint8Array|CID} cid\n */\nexports.cleanCid = cid => {\n  if (cid instanceof Uint8Array) {\n    return CID.decode(cid)\n  }\n\n  return CID.parse(cid.toString())\n}\n"]},"metadata":{},"sourceType":"script"}