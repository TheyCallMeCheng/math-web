{"ast":null,"code":"var _jsxFileName = \"/Users/marianionutcioancaradu/Documents/mathBlocks_web/mathblocks-web/src/components/Gallery.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport abiDecoder from 'abi-decoder';\nimport ReactDOM from 'react-dom';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IPFS = require('ipfs-http-client'); //Contract declaration and init\n\n\nconst contract_abi = require('./abi.json'); //To change during deployment\n\n\nconst web3 = new Web3(\"https://rinkeby.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\"); //To change during deployment\n\nconst contractAddr = \"0x1130753c69717efa1aa8450005e026788810bcd6\"; //To change during deployment\n\nfunction Gallery() {\n  _s();\n\n  const baseUrl = 'https://ipfs.io/ipfs';\n  useEffect(() => {\n    console.log('render!');\n  });\n  abiDecoder.addABI(contract_abi);\n  var contract = new web3.eth.Contract(contract_abi, web3.utils.toChecksumAddress(contractAddr));\n  var ImageCounter = 0;\n\n  function renderImage(obj) {\n    ImageCounter++;\n\n    const images = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: 'galleryId' + ImageCounter,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: obj.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: obj.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n\n    ReactDOM.render(images, document.getElementById('galleryId' + ImageCounter));\n  }\n\n  async function getObject(string) {\n    let metadataObj;\n    let res = await fetch(baseUrl + string.substring(6)).then(response => response.json()).then(data => metadataObj = data);\n    return metadataObj;\n  }\n\n  async function load() {\n    const node = await IPFS.create();\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n    console.log(accounts[0]);\n    let walletNfts = await contract.methods.walletOfOwner(accounts[0]).call();\n    console.log(walletNfts);\n    var uri;\n\n    for await (let variable of walletNfts) {\n      uri = await contract.methods.tokenURI(variable).call();\n      let obj = await getObject(uri);\n      console.log(\"Image url \" + obj.image);\n      renderImage(obj);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"Gallery\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: load,\n        children: \"Press me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"img-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"galleryId1\",\n          class: \"galleryViewr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"galleryViewr\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Potato #2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://gateway.pinata.cloud/ipfs/QmVQRRVVWQ6SMfCz5EpsxwXFatqJ3qahbbvZqrgVBJtecK/0.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"galleryViewr\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Potato #3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://gateway.pinata.cloud/ipfs/QmVQRRVVWQ6SMfCz5EpsxwXFatqJ3qahbbvZqrgVBJtecK/0.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Gallery, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/marianionutcioancaradu/Documents/mathBlocks_web/mathblocks-web/src/components/Gallery.js"],"names":["React","useState","useEffect","abiDecoder","ReactDOM","Web3","IPFS","require","contract_abi","web3","contractAddr","Gallery","baseUrl","console","log","addABI","contract","eth","Contract","utils","toChecksumAddress","ImageCounter","renderImage","obj","images","name","image","render","document","getElementById","getObject","string","metadataObj","res","fetch","substring","then","response","json","data","load","node","create","accounts","window","ethereum","request","method","walletNfts","methods","walletOfOwner","call","uri","variable","tokenURI"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport abiDecoder from 'abi-decoder'\nimport ReactDOM from 'react-dom'\nimport Web3 from 'web3'\nconst IPFS = require('ipfs-http-client');\n\n//Contract declaration and init\nconst contract_abi = require('./abi.json'); //To change during deployment\nconst web3 = new Web3(\"https://rinkeby.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\"); //To change during deployment\nconst contractAddr = \"0x1130753c69717efa1aa8450005e026788810bcd6\"; //To change during deployment\n\nfunction Gallery(){\n    const baseUrl = 'https://ipfs.io/ipfs';\n\n    useEffect(() => {\n        console.log('render!');\n    });\n    \n\n    abiDecoder.addABI(contract_abi);\n    var contract = new web3.eth.Contract(\n        contract_abi,       \n        web3.utils.toChecksumAddress(contractAddr)\n    );\n\n    var ImageCounter = 0;\n    function renderImage(obj) {\n        ImageCounter++;\n        const images = ( \n            <div id={'galleryId' + ImageCounter} >\n                <h1>{obj.name}</h1>\n                <img src={obj.image} />\n            </div>\n        );\n        ReactDOM.render(\n            images,\n            document.getElementById('galleryId'+ImageCounter)\n        );\n    }\n\n    async function getObject(string) {\n        let metadataObj;\n        let res = await fetch(baseUrl + string.substring(6))\n                    .then(response => response.json())\n                    .then(data => metadataObj = data)\n        \n        return metadataObj;\n    }\n\n\n    async function load() {\n        const node = await IPFS.create();\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        console.log(accounts[0])\n        let walletNfts = await contract.methods.walletOfOwner(accounts[0]).call();\n        console.log(walletNfts);\n\n        var uri;\n        for await (let variable of walletNfts) {\n            uri = await contract.methods.tokenURI(variable).call();\n            let obj = await getObject(uri);\n            console.log(\"Image url \" + obj.image);\n            renderImage(obj);\n        }\n          \n\n\n    }\n    return(\n        <div class=\"Gallery\" >\n            <h1>Gallery</h1>\n            <div>\n                <button onClick={load}>\n                    Press me\n                </button>\n                <div class=\"img-container\">\n                    <div id=\"galleryId1\" class=\"galleryViewr\">\n\n                    </div>\n                    <div class=\"galleryViewr\">\n                        <h1>Potato #2</h1>\n                        <img src=\"https://gateway.pinata.cloud/ipfs/QmVQRRVVWQ6SMfCz5EpsxwXFatqJ3qahbbvZqrgVBJtecK/0.png\" />\n                    </div>\n                    <div class=\"galleryViewr\">\n                        <h1>Potato #3</h1>\n                        <img src=\"https://gateway.pinata.cloud/ipfs/QmVQRRVVWQ6SMfCz5EpsxwXFatqJ3qahbbvZqrgVBJtecK/0.png\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default Gallery;"]},"metadata":{},"sourceType":"module"}